#reader(lib"read.ss""wxme")WXME0108 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 5.1.3 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 28 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 33 #"(lib \"bullet-snip.ss\" \"browser\")\0"
0 0 29 #"drscheme:bindings-snipclass%\0"
1 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 15 #"test-case-box%\0"
2 0 1 6 #"wxloc\0"
          0 0 55 0 1 #"\0"
0 75 1 #"\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 10 #"Monospace\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 38
#"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 28
#"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 34 139 34 0 0 0 -1 -1 2 37
#"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 34 139 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 176 48 96 0 0 0 -1 -1 2 38
#"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 176 48 96 0 0 0 -1 -1 4 1
#"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 100 0 0 0 0 -1
-1 0 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 200 0 0 0 0 0 -1 -1 0 1
#"\0"
0 75 10 #"Monospace\0"
0.0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 255 255 0 -1 -1
          0 1092 0 17 3 18 #";; Braden Licastro"
0 0 4 29 1 #"\n"
0 0 17 3 38 #";; Takes in code and outputs assembly."
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 3 12 #"#lang racket"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 7 #"require"
0 0 4 3 1 #" "
0 0 19 3 10 #"\"base.rkt\""
0 0 22 3 1 #")"
0 0 19 29 1 #"\n"
0 0 19 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 7 #"provide"
0 0 19 3 1 #" "
0 0 14 3 11 #"pass-to-asm"
0 0 22 3 1 #")"
0 0 19 29 1 #"\n"
0 0 19 29 1 #"\n"
0 0 17 3 10 #"; CONTRACT"
0 0 19 29 1 #"\n"
0 0 17 3 24 #";; input LOIDs -> String"
0 0 19 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 19 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"pass-to-asm"
0 0 19 3 1 #" "
0 0 14 3 5 #"input"
0 0 22 3 1 #")"
0 0 19 29 1 #"\n"
0 0 19 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 4 #"cond"
0 0 19 29 1 #"\n"
0 0 19 3 4 #"    "
0 0 22 3 2 #"[("
0 0 14 3 6 #"empty?"
0 0 19 3 1 #" "
0 0 14 3 5 #"input"
0 0 22 3 1 #")"
0 0 19 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"prog-end"
0 0 22 3 2 #")]"
0 0 19 29 1 #"\n"
0 0 19 3 4 #"    "
0 0 22 3 2 #"[("
0 0 14 3 7 #"number?"
0 0 19 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"id-value"
0 0 19 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"first"
0 0 19 3 1 #" "
0 0 14 3 5 #"input"
0 0 22 3 3 #")))"
0 0 19 29 1 #"\n"
0 0 19 3 5 #"     "
0 0 22 3 1 #"("
0 0 14 3 13 #"string-append"
0 0 19 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"asm-num"
0 0 19 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"first"
0 0 19 3 1 #" "
0 0 14 3 5 #"input"
0 0 22 3 2 #"))"
0 0 19 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"pass-to-asm"
0 0 19 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"rest"
0 0 19 3 1 #" "
0 0 14 3 5 #"input"
0 0 22 3 3 #")))"
0 0 19 29 1 #"\n"
0 0 19 3 5 #"     "
0 0 22 3 1 #"]"
0 0 19 29 1 #"\n"
0 0 19 3 4 #"    "
0 0 22 3 2 #"[("
0 0 14 3 6 #"binop?"
0 0 19 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"id-value"
0 0 19 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"first"
0 0 19 3 1 #" "
0 0 14 3 5 #"input"
0 0 22 3 3 #")))"
0 0 19 29 1 #"\n"
0 0 19 3 5 #"     "
0 0 22 3 1 #"("
0 0 14 3 13 #"string-append"
0 0 19 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"asm-binop"
0 0 19 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"first"
0 0 19 3 1 #" "
0 0 14 3 5 #"input"
0 0 22 3 2 #"))"
0 0 19 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"pass-to-asm"
0 0 19 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"rest"
0 0 19 3 1 #" "
0 0 14 3 5 #"input"
0 0 22 3 3 #")))"
0 0 19 29 1 #"\n"
0 0 19 3 5 #"     "
0 0 22 3 1 #"]"
0 0 19 29 1 #"\n"
0 0 19 3 4 #"    "
0 0 22 3 2 #"[("
0 0 14 3 6 #"label?"
0 0 19 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"id-value"
0 0 19 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"first"
0 0 19 3 1 #" "
0 0 14 3 5 #"input"
0 0 22 3 3 #")))"
0 0 19 29 1 #"\n"
0 0 19 3 5 #"     "
0 0 22 3 1 #"("
0 0 14 3 13 #"string-append"
0 0 19 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"asm-label"
0 0 22 3 1 #"("
0 0 14 3 5 #"first"
0 0 19 3 1 #" "
0 0 14 3 5 #"input"
0 0 22 3 2 #"))"
0 0 19 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"pass-to-asm"
0 0 19 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"rest"
0 0 19 3 1 #" "
0 0 14 3 5 #"input"
0 0 22 3 3 #")))"
0 0 19 29 1 #"\n"
0 0 19 3 5 #"     "
0 0 22 3 1 #"]"
0 0 19 29 1 #"\n"
0 0 19 3 4 #"    "
0 0 22 3 2 #"[("
0 0 14 3 5 #"goto?"
0 0 19 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"id-value"
0 0 19 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"first"
0 0 19 3 1 #" "
0 0 14 3 5 #"input"
0 0 22 3 3 #")))"
0 0 19 29 1 #"\n"
0 0 19 3 5 #"     "
0 0 22 3 1 #"("
0 0 14 3 13 #"string-append"
0 0 19 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"asm-goto"
0 0 19 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"first"
0 0 19 3 1 #" "
0 0 14 3 5 #"input"
0 0 22 3 2 #"))"
0 0 19 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"pass-to-asm"
0 0 19 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"rest"
0 0 19 3 1 #" "
0 0 14 3 5 #"input"
0 0 22 3 3 #")))"
0 0 19 29 1 #"\n"
0 0 19 3 5 #"     "
0 0 22 3 1 #"]"
0 0 19 29 1 #"\n"
0 0 19 3 4 #"    "
0 0 22 3 2 #"[("
0 0 14 3 5 #"jump?"
0 0 19 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"id-value"
0 0 19 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"first"
0 0 19 3 1 #" "
0 0 14 3 5 #"input"
0 0 22 3 3 #")))"
0 0 19 29 1 #"\n"
0 0 19 3 5 #"     "
0 0 22 3 1 #"("
0 0 14 3 13 #"string-append"
0 0 19 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"asm-jump"
0 0 19 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"first"
0 0 19 3 1 #" "
0 0 14 3 5 #"input"
0 0 22 3 2 #"))"
0 0 19 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"pass-to-asm"
0 0 19 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"rest"
0 0 19 3 1 #" "
0 0 14 3 5 #"input"
0 0 22 3 3 #")))"
0 0 19 29 1 #"\n"
0 0 19 3 5 #"     "
0 0 22 3 1 #"]"
0 0 19 29 1 #"\n"
0 0 19 3 4 #"    "
0 0 22 3 2 #"[("
0 0 14 3 7 #"symbol?"
0 0 19 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"id-value"
0 0 19 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"first"
0 0 19 3 1 #" "
0 0 14 3 5 #"input"
0 0 22 3 3 #")))"
0 0 19 29 1 #"\n"
0 0 19 3 5 #"     "
0 0 22 3 1 #"("
0 0 14 3 13 #"string-append"
0 0 19 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"asm-symbol"
0 0 19 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"first"
0 0 19 3 1 #" "
0 0 14 3 5 #"input"
0 0 22 3 2 #"))"
0 0 19 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"pass-to-asm"
0 0 19 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"rest"
0 0 19 3 1 #" "
0 0 14 3 5 #"input"
0 0 22 3 3 #")))"
0 0 19 29 1 #"\n"
0 0 19 3 5 #"     "
0 0 22 3 1 #"]"
0 0 19 29 1 #"\n"
0 0 19 3 4 #"    "
0 0 19 29 1 #"\n"
0 0 19 3 4 #"    "
0 0 22 3 1 #"["
0 0 14 3 4 #"else"
0 0 19 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"error"
0 0 19 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"format"
0 0 19 3 4 #" \"~a"
0 0 19 3 2 #"\" "
0 0 22 3 1 #"("
0 0 14 3 5 #"first"
0 0 19 3 1 #" "
0 0 14 3 5 #"input"
0 0 22 3 4 #")))]"
0 0 19 29 1 #"\n"
0 0 19 3 4 #"    "
0 0 22 3 2 #"))"
0 0 19 29 1 #"\n"
0 0 19 29 1 #"\n"
0 0 17 3 15 #"; DONE CONTRACT"
0 0 19 29 1 #"\n"
0 0 17 3 25 #";; input Num ID -> String"
0 0 19 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 19 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"asm-num"
0 0 19 3 1 #" "
0 0 14 3 5 #"input"
0 0 22 3 1 #")"
0 0 19 29 1 #"\n"
0 0 19 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 13 #"string-append"
0 0 19 3 5 #" \"SET"
0 0 19 3 3 #" \" "
0 0 22 3 1 #"("
0 0 14 3 9 #"stringify"
0 0 19 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"id-sym"
0 0 19 3 1 #" "
0 0 14 3 5 #"input"
0 0 22 3 2 #"))"
0 0 19 29 1 #"\n"
0 0 19 3 19 #"                 \","
0 0 19 3 3 #" \" "
0 0 22 3 1 #"("
0 0 14 3 9 #"stringify"
0 0 19 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"id-value"
0 0 19 3 1 #" "
0 0 14 3 5 #"input"
0 0 22 3 2 #"))"
0 0 19 3 4 #" \"\\n"
0 0 19 3 1 #"\""
0 0 22 3 2 #"))"
0 0 19 29 1 #"\n"
0 0 19 29 1 #"\n"
0 0 17 3 15 #"; DONE CONTRACT"
0 0 19 29 1 #"\n"
0 0 17 3 25 #";; input Sim ID -> String"
0 0 19 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 19 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"asm-binop"
0 0 19 3 1 #" "
0 0 14 3 5 #"input"
0 0 22 3 1 #")"
0 0 19 29 1 #"\n"
0 0 19 3 1 #" "
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 13 #"string-append"
0 0 17 3 1 #" "
0 0 19 3 6 #"\"SET \""
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"stringify"
0 0 4 3 1 #" "
0 0 19 3 3 #"\"[\""
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"add-symbol"
0 0 19 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"newSym"
0 0 22 3 2 #"))"
0 0 4 3 1 #" "
0 0 19 3 3 #"\"]\""
0 0 22 3 1 #")"
0 0 19 3 3 #" \","
0 0 19 3 3 #" \" "
0 0 22 3 1 #"("
0 0 14 3 9 #"stringify"
0 0 19 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"binop-lhs"
0 0 19 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"id-value"
0 0 19 3 1 #" "
0 0 14 3 5 #"input"
0 0 22 3 3 #")))"
0 0 19 3 4 #" \"\\n"
0 0 19 3 1 #"\""
0 0 19 29 1 #"\n"
0 0 19 3 21 #"                 \"SET"
0 0 19 3 3 #" \" "
0 0 22 3 1 #"("
0 0 14 3 9 #"stringify"
0 0 19 3 4 #" \"[\""
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"add-symbol"
0 0 19 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"newSym"
0 0 22 3 2 #"))"
0 0 4 3 1 #" "
0 0 19 3 3 #"\"]\""
0 0 22 3 1 #")"
0 0 19 3 3 #" \","
0 0 19 3 3 #" \" "
0 0 22 3 1 #"("
0 0 14 3 9 #"stringify"
0 0 19 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"binop-rhs"
0 0 19 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"id-value"
0 0 19 3 1 #" "
0 0 14 3 5 #"input"
0 0 22 3 3 #")))"
0 0 19 3 4 #" \"\\n"
0 0 19 3 1 #"\""
0 0 19 29 1 #"\n"
0 0 19 3 17 #"                 "
0 0 22 3 1 #"("
0 0 15 3 4 #"cond"
0 0 19 3 1 #" "
0 0 19 29 1 #"\n"
0 0 19 3 19 #"                   "
0 0 22 3 2 #"[("
0 0 14 3 6 #"equal?"
0 0 19 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 1 #"+"
0 0 19 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"binop-op"
0 0 19 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"id-value"
0 0 19 3 1 #" "
0 0 14 3 5 #"input"
0 0 22 3 3 #")))"
0 0 19 3 5 #" \"ADD"
0 0 19 3 3 #" \" "
0 0 19 29 1 #"\n"
0 0 19 3 60
#"                                                            "
0 0 22 3 1 #"("
0 0 14 3 9 #"stringify"
0 0 19 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"lookup"
0 0 19 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 14 #"string->symbol"
0 0 19 3 1 #" "
0 0 19 29 1 #"\n"
0 0 19 3 69
(
 #"                                                                    "
 #" "
) 0 0 22 3 1 #"("
0 0 14 3 13 #"string-append"
0 0 19 3 5 #" \"sym"
0 0 19 3 2 #"\" "
0 0 22 3 1 #"("
0 0 14 3 4 #"sub1"
0 0 19 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"new-sym"
0 0 22 3 6 #"))))))"
0 0 19 29 1 #"\n"
0 0 19 3 62
#"                                                            \","
0 0 19 3 3 #" \" "
0 0 19 29 1 #"\n"
0 0 19 3 60
#"                                                            "
0 0 22 3 1 #"("
0 0 14 3 9 #"stringify"
0 0 19 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"lookup"
0 0 19 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 14 #"string->symbol"
0 0 19 29 1 #"\n"
0 0 19 3 76
(
 #"                                                                    "
 #"        "
) 0 0 22 3 1 #"("
0 0 14 3 13 #"string-append"
0 0 19 3 5 #" \"sym"
0 0 19 3 2 #"\" "
0 0 22 3 1 #"("
0 0 14 3 6 #"newSym"
0 0 22 3 5 #")))))"
0 0 19 3 4 #" \"\\n"
0 0 19 3 1 #"\""
0 0 22 3 1 #"]"
0 0 19 29 1 #"\n"
0 0 19 3 19 #"                   "
0 0 22 3 2 #"[("
0 0 14 3 6 #"equal?"
0 0 19 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 1 #"-"
0 0 19 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"binop-op"
0 0 19 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"id-value"
0 0 19 3 1 #" "
0 0 14 3 5 #"input"
0 0 22 3 3 #")))"
0 0 19 3 2 #" \""
0 0 19 3 3 #"SUB"
0 0 19 3 1 #" "
0 0 19 3 8 #"randVar1"
0 0 19 3 1 #","
0 0 19 3 11 #" randVar2\\n"
0 0 19 3 1 #"\""
0 0 22 3 2 #"])"
0 0 19 29 1 #"\n"
0 0 19 3 21 #"                 \"SET"
0 0 19 3 3 #" \" "
0 0 22 3 1 #"("
0 0 14 3 9 #"stringify"
0 0 19 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"id-sym"
0 0 19 3 1 #" "
0 0 14 3 5 #"input"
0 0 22 3 2 #"))"
0 0 19 3 2 #" \""
0 0 19 3 1 #","
0 0 19 3 11 #" randVar1\\n"
0 0 19 3 1 #"\""
0 0 19 29 1 #"\n"
0 0 19 3 17 #"                 "
0 0 22 3 2 #"))"
0 0 19 29 1 #"\n"
0 0 19 29 1 #"\n"
0 0 17 3 15 #"; DONE CONTRACT"
0 0 19 29 1 #"\n"
0 0 17 3 24 #";; input Label -> String"
0 0 19 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 19 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"asm-label"
0 0 19 3 1 #" "
0 0 14 3 5 #"input"
0 0 22 3 1 #")"
0 0 19 29 1 #"\n"
0 0 19 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 13 #"string-append"
0 0 19 3 3 #" \":"
0 0 19 3 2 #"\" "
0 0 22 3 1 #"("
0 0 14 3 9 #"stringify"
0 0 19 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"label-sym"
0 0 19 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"id-value"
0 0 19 3 1 #" "
0 0 14 3 5 #"input"
0 0 22 3 3 #")))"
0 0 19 3 4 #" \"\\n"
0 0 19 3 1 #"\""
0 0 22 3 1 #")"
0 0 19 29 1 #"\n"
0 0 19 3 2 #"  "
0 0 22 3 1 #")"
0 0 19 29 1 #"\n"
0 0 19 29 1 #"\n"
0 0 17 3 15 #"; DONE CONTRACT"
0 0 19 29 1 #"\n"
0 0 17 3 23 #";; input GoTo -> String"
0 0 19 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 19 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"asm-goto"
0 0 19 3 1 #" "
0 0 14 3 5 #"input"
0 0 22 3 1 #")"
0 0 19 29 1 #"\n"
0 0 19 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 13 #"string-append"
0 0 19 3 2 #" \""
0 0 19 3 3 #"SET"
0 0 19 3 1 #" "
0 0 19 3 3 #"PC,"
0 0 19 3 3 #" \" "
0 0 22 3 1 #"("
0 0 14 3 9 #"stringify"
0 0 19 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"goto-sym"
0 0 19 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"id-value"
0 0 19 3 1 #" "
0 0 14 3 5 #"input"
0 0 22 3 3 #")))"
0 0 19 3 4 #" \"\\n"
0 0 19 3 1 #"\""
0 0 22 3 1 #")"
0 0 19 29 1 #"\n"
0 0 19 3 2 #"  "
0 0 22 3 1 #")"
0 0 19 29 1 #"\n"
0 0 19 29 1 #"\n"
0 0 17 3 10 #"; CONTRACT"
0 0 19 29 1 #"\n"
0 0 17 3 23 #";; input Jump -> String"
0 0 19 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 19 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"asm-jump"
0 0 19 3 1 #" "
0 0 14 3 5 #"input"
0 0 22 3 1 #")"
0 0 19 29 1 #"\n"
0 0 19 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 3 #"let"
0 0 19 3 1 #" "
0 0 22 3 2 #"(["
0 0 14 3 5 #"input"
0 0 19 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"id-value"
0 0 19 3 1 #" "
0 0 14 3 5 #"input"
0 0 22 3 3 #")])"
0 0 19 29 1 #"\n"
0 0 19 3 4 #"    "
0 0 22 3 1 #"("
0 0 15 3 4 #"cond"
0 0 19 29 1 #"\n"
0 0 19 3 6 #"      "
0 0 22 3 2 #"[("
0 0 14 3 9 #"variable?"
0 0 19 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"jump-test"
0 0 19 3 1 #" "
0 0 14 3 5 #"input"
0 0 22 3 2 #"))"
0 0 19 29 1 #"\n"
0 0 19 3 7 #"       "
0 0 22 3 1 #"("
0 0 14 3 13 #"string-append"
0 0 19 3 3 #" \"@"
0 0 19 3 2 #"\" "
0 0 22 3 1 #"("
0 0 14 3 9 #"stringify"
0 0 19 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 14 #"variable-value"
0 0 19 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"jump-test"
0 0 19 3 1 #" "
0 0 14 3 5 #"input"
0 0 22 3 3 #")))"
0 0 19 3 4 #" \"\\n"
0 0 19 3 1 #"\""
0 0 19 29 1 #"\n"
0 0 19 3 28 #"                      \"D=M\\n"
0 0 19 3 1 #"\""
0 0 19 29 1 #"\n"
0 0 19 3 24 #"                      \"@"
0 0 19 3 2 #"\" "
0 0 22 3 1 #"("
0 0 14 3 9 #"stringify"
0 0 19 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 14 #"variable-value"
0 0 19 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 13 #"jump-jumpdest"
0 0 19 3 1 #" "
0 0 14 3 5 #"input"
0 0 22 3 3 #")))"
0 0 19 3 4 #" \"\\n"
0 0 19 3 4 #"\"   "
0 0 19 29 1 #"\n"
0 0 19 3 23 #"                      \""
0 0 19 3 3 #"D;\""
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"stringify"
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 12 #"jump-jumpsym"
0 0 17 3 1 #" "
0 0 14 3 5 #"input"
0 0 22 3 2 #"))"
0 0 17 3 1 #" "
0 0 19 3 4 #"\"\\n\""
0 0 22 3 2 #")]"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 2 #"[("
0 0 14 3 4 #"num?"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"jump-test"
0 0 4 3 1 #" "
0 0 14 3 5 #"input"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 7 #"       "
0 0 22 3 1 #"("
0 0 14 3 13 #"string-append"
0 0 4 3 1 #" "
0 0 19 3 3 #"\"@\""
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"stringify"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"num-value"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"jump-test"
0 0 4 3 1 #" "
0 0 14 3 5 #"input"
0 0 22 3 3 #")))"
0 0 4 3 1 #" "
0 0 19 3 4 #"\"\\n\""
0 0 4 29 1 #"\n"
0 0 4 3 22 #"                      "
0 0 19 3 7 #"\"D=A\\n\""
0 0 4 29 1 #"\n"
0 0 4 3 22 #"                      "
0 0 19 3 3 #"\"@\""
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"stringify"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 14 #"variable-value"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 13 #"jump-jumpdest"
0 0 4 3 1 #" "
0 0 14 3 5 #"input"
0 0 22 3 3 #")))"
0 0 4 3 1 #" "
0 0 19 3 4 #"\"\\n\""
0 0 4 3 3 #"   "
0 0 4 29 1 #"\n"
0 0 4 3 22 #"                      "
0 0 19 3 4 #"\"A;\""
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"stringify"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 12 #"jump-jumpsym"
0 0 4 3 1 #" "
0 0 14 3 5 #"input"
0 0 22 3 2 #"))"
0 0 4 3 1 #" "
0 0 19 3 4 #"\"\\n\""
0 0 22 3 2 #")]"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 1 #"["
0 0 14 3 4 #"else"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"error"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"format"
0 0 4 3 1 #" "
0 0 19 3 4 #"\"~a\""
0 0 4 3 1 #" "
0 0 14 3 5 #"input"
0 0 22 3 3 #"))]"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 15 #"; DONE CONTRACT"
0 0 4 29 1 #"\n"
0 0 17 3 25 #";; input Symbol -> String"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"asm-symbol"
0 0 4 3 1 #" "
0 0 14 3 5 #"input"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 13 #"string-append"
0 0 4 3 1 #" "
0 0 19 3 6 #"\"SET \""
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"stringify"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"id-sym"
0 0 4 3 1 #" "
0 0 14 3 5 #"input"
0 0 22 3 2 #"))"
0 0 4 3 1 #" "
0 0 19 3 4 #"\", \""
0 0 19 29 1 #"\n"
0 0 19 3 17 #"                 "
0 0 22 3 1 #"("
0 0 14 3 9 #"stringify"
0 0 19 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"id-value"
0 0 19 3 1 #" "
0 0 14 3 5 #"input"
0 0 22 3 2 #"))"
0 0 19 3 4 #" \"\\n"
0 0 19 3 1 #"\""
0 0 22 3 1 #")"
0 0 19 29 1 #"\n"
0 0 19 3 2 #"  "
0 0 22 3 1 #")"
0 0 19 29 1 #"\n"
0 0 19 29 1 #"\n"
0 0 17 3 10 #"; CONTRACT"
0 0 19 29 1 #"\n"
0 0 17 3 33 #";; input NumberorSymbol -> String"
0 0 19 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 19 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"stringify"
0 0 19 3 1 #" "
0 0 14 3 5 #"input"
0 0 22 3 1 #")"
0 0 19 29 1 #"\n"
0 0 19 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 4 #"cond"
0 0 19 29 1 #"\n"
0 0 19 3 4 #"    "
0 0 22 3 2 #"[("
0 0 14 3 7 #"number?"
0 0 19 3 1 #" "
0 0 14 3 5 #"input"
0 0 22 3 2 #")("
0 0 14 3 14 #"number->string"
0 0 19 3 1 #" "
0 0 14 3 5 #"input"
0 0 22 3 2 #")]"
0 0 19 29 1 #"\n"
0 0 19 3 4 #"    "
0 0 22 3 1 #"["
0 0 14 3 4 #"else"
0 0 19 29 1 #"\n"
0 0 19 3 5 #"     "
0 0 22 3 1 #"("
0 0 14 3 14 #"symbol->string"
0 0 19 3 1 #" "
0 0 14 3 5 #"input"
0 0 22 3 4 #")]))"
0 0 19 29 1 #"\n"
0 0 19 29 1 #"\n"
0 0 17 3 15 #"; DONE CONTRACT"
0 0 19 29 1 #"\n"
0 0 17 3 26 #";; input Nothing -> String"
0 0 19 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 19 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"prog-end"
0 0 22 3 1 #")"
0 0 19 29 1 #"\n"
0 0 19 3 3 #"  \""
0 0 19 3 19 #":end SET PC, end\\n\""
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 3 #";; "
0 0 17 3 1 #"S"
0 0 17 3 3 #"ymb"
0 0 17 3 8 #"ol table"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 5 #"table"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"make-hash"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 12 #"sym-location"
0 0 4 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 7 #"new-sym"
0 0 4 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"lookup"
0 0 4 3 1 #" "
0 0 14 3 3 #"sym"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 2 #"if"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"hash-ref"
0 0 4 3 1 #" "
0 0 14 3 5 #"table"
0 0 4 3 1 #" "
0 0 14 3 3 #"sym"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 15 3 2 #"\316\273"
0 0 4 3 1 #" "
0 0 22 3 2 #"()"
0 0 4 3 1 #" "
0 0 14 3 5 #"false"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 1 #"("
0 0 14 3 8 #"hash-ref"
0 0 4 3 1 #" "
0 0 14 3 5 #"table"
0 0 4 3 1 #" "
0 0 14 3 3 #"sym"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 1 #"("
0 0 14 3 5 #"error"
0 0 4 3 1 #" "
0 0 19 3 23 #"\"No symbol found: ~a~n\""
0 0 4 3 1 #" "
0 0 14 3 3 #"sym"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 17 3 28 #";; Don't insert duplicates.."
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"add-symbol"
0 0 4 3 1 #" "
0 0 14 3 3 #"sym"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 2 #"if"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"hash-ref"
0 0 4 3 1 #" "
0 0 14 3 5 #"table"
0 0 4 3 1 #" "
0 0 14 3 3 #"sym"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 15 3 2 #"\316\273"
0 0 4 3 1 #" "
0 0 22 3 2 #"()"
0 0 4 3 1 #" "
0 0 14 3 5 #"false"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 1 #"("
0 0 14 3 6 #"lookup"
0 0 4 3 1 #" "
0 0 14 3 3 #"sym"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 1 #"("
0 0 15 3 3 #"let"
0 0 4 3 1 #" "
0 0 22 3 2 #"(["
0 0 14 3 7 #"current"
0 0 4 3 1 #" "
0 0 14 3 12 #"sym-location"
0 0 22 3 2 #"])"
0 0 4 29 1 #"\n"
0 0 4 3 8 #"        "
0 0 22 3 1 #"("
0 0 14 3 9 #"hash-set!"
0 0 4 3 1 #" "
0 0 14 3 5 #"table"
0 0 4 3 1 #" "
0 0 14 3 3 #"sym"
0 0 4 3 1 #" "
0 0 14 3 7 #"current"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 8 #"        "
0 0 22 3 1 #"("
0 0 14 3 4 #"set!"
0 0 4 3 1 #" "
0 0 14 3 12 #"sym-location"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"add1"
0 0 4 3 1 #" "
0 0 14 3 12 #"sym-location"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 8 #"        "
0 0 14 3 7 #"current"
0 0 4 29 1 #"\n"
0 0 4 3 8 #"        "
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 30 #";;Make new symbols if we dont "
0 0 17 3 5 #"have "
0 0 17 3 4 #"one "
0 0 17 3 3 #"to "
0 0 17 3 10 #"begin with"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"newSym"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 4 #"set!"
0 0 4 3 1 #" "
0 0 14 3 7 #"new-sym"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"add1"
0 0 4 3 1 #" "
0 0 14 3 7 #"new-sym"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 17 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 14 #"string->symbol"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 13 #"string-append"
0 0 17 3 1 #" "
0 0 19 3 5 #"\"sym\""
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"stringify"
0 0 4 3 1 #" "
0 0 14 3 7 #"new-sym"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #")"
0           0
